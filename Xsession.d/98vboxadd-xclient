#!/bin/sh
## @file
# Start the Guest Additions X11 Client
#

#
# Copyright (C) 2007-2020 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

in_virtual_machine()
{
	if [ -z "$(lspci -d 80ee:cafe)" ]; then
	echo "VirtualBox Additions disabled, not in a Virtual Machine" >&2
	return 1
	fi

	return 0
}
in_virtual_machine || return

# Sanity check: if non-writeable PID-files are present in the user home
# directory VBoxClient will fail to start.
for i in $HOME/.vboxclient-*.pid; do
    test -w $i || rm -f $i
done

if ! test -c /dev/vboxguest 2>/dev/null; then
   # Do not start if the kernel module is not present.
   # Execute notify-send in the back-ground to avoid racing with sddm,
   # as notify-send may wait for sddm to start while it waits for us to exit.
   echo "VBoxClient: the VirtualBox kernel service is not running.  Exiting." &
elif test -z "${SSH_CONNECTION}"; then
   # This script can also be triggered by a connection over SSH, which is not
   # what we had in mind, so we do not start VBoxClient in that case.  We do
   # not use "exit" here as this script is "source"d, not executed.
  /usr/bin/VBoxClient --clipboard || true
  /usr/bin/VBoxClient --checkhostversion || true
  /usr/bin/VBoxClient --display || true
  /usr/bin/VBoxClient --seamless || true
  /usr/bin/VBoxClient --draganddrop || true
  if [ $(VBoxClient -h |grep -q vmsvga-x11) ]; then
       /usr/bin/VBoxClient --vmsvga-x11  || true # In case VMSVGA emulation is enabled - older VB
  else
	   /usr/bin/VBoxClient --vmsvga || true # In case VMSVGA emulation is enabled - Newer VB
  fi
fi
